package day06;import java.util.Arrays;public class Test {    public static void main(String[] args) {        //1.MaxOfArray求数组元素最大值并放在最后一个元素的下一个位置        //要求：声明整型数组并填充随机数据，找到最大值，将数组扩容并将最大值放末尾        int[] arr = new int[10];        for (int i = 0; i < arr.length; i++) {            arr[i] = (int) (Math.random() * 100);            System.out.println(arr[i]);        }        int max = arr[0];        for (int i = 1; i < arr.length; i++) {            if (arr[i] > max) {                max = arr[i];            }        }        System.out.println("最大值为：" + max);        arr = Arrays.copyOf(arr, arr.length + 1);        arr[arr.length - 1] = max;        for (int i = 0; i < arr.length; i++) {            System.out.println(arr[i]);        }        //数组的演示        //2.数组排序的练习        //要求：声明整型数组并填充数据，排序，输出排序后数据，倒序输出数据        int[] saber = new int[10];        for (int i = 0; i < saber.length; i++) {            saber[i] = (int) (Math.random() * 100);            System.out.println(saber[i]);        }        Arrays.sort(saber);        System.out.println("数组排序后的数据：");        for (int i = 0; i < saber.length; i++) {            System.out.println(saber[i]);        }        System.out.println("倒序输出:");        for (int i = saber.length - 1; i >= 0; i--) {            System.out.println(saber[i]);        }        //3.方法的练习：        //要求：        //定义say()无参无返回值方法，调用测试        //定义sayHi()有一个参无返回值方法，调用测试        //定义sayHello()有两个参无返回值的方法，调用测试        //定义getNum()无参有返回值方法，演示return的用法，调用测试        //定义plus()两个参有返回值方法，调用测试        //定义getMinOfArray()用于返回指定数组的最小值，调用测试        say();        sayhi("李四");//String name="李四"        sayhello("李四", 16);//String name="李四",int age=16    }    //无参无返回值    public static void say() {        System.out.println("大家好，我叫MK,今年4岁了");    }    //有参无返回值    public static void sayhi(String name) {        System.out.println("大家好，我叫" + name + "，今年3岁");    }    //有参无返回值    public static void sayhello(String name,int age) {        if (age >= 18) {//在某种特定条件下，提前结束方法            return;//结束方法的执行        }        System.out.println("大家好，我叫" + name + "，今年" + age + "岁了");        double a = getNum(); //getNum()值就是return后那个数        System.out.println(a);//8.88，模拟对返回值的后续操作        int b = plus(5, 6);        System.out.println(b);//11，模拟对返回值的后续操作        int m = 5, n = 6;        int c = plus(m, n);//传递的是m和n里面的数        System.out.println(c);//11，模拟对返回值的后续操作        int[] archer = {12, 55, 2, 36};        int min = getmMinOfArray(archer);        System.out.println(min);//1----模拟对返回值的后续操作    }    //无参有返回值    public static double getNum() {        //return "abc"; //编译错误，返回值类型不匹配        return 8.88;//1)结束方法的执行  2)返回结果给调用方    }    //有参有返回值    public static int plus(int num1,int num2) {        int num = num1 + num2;        return num;//返回的是num里面的那个数        //return num1+num2; //返回num1与num2的和    }    //获取指定整型数组元素的最小值    public static int getmMinOfArray(int[]archer){        int min = archer[0];//假设第1个元素为最小值        for (int i=1; i<archer.length; i++){            if (archer[i]<min){                min = archer[i];            }        }        return min;    }}