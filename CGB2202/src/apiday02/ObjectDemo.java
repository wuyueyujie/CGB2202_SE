package apiday02;/**演示在什么场合下会用到0bject中的方法以及应当如何重写它们*/public class ObjectDemo {    public static void main(String[] args) {        /*        //0bject类另一个常常被派售类重等的方法: equals()        Point p1 = new Point(1, 2);        Point p2 = new Point(1,2);        System. out. println(p1==p2); //faLse, ==比较的地址        Object中的equals（）内部还是使用==来比较        因此派生类在使用时若下比较内容，常常需要重写equals（）        若派生来中重写了equals（），则调用重写之后的        java的类全部重写equals（）了，我们自己定义的类必须之间重写        ---------的String.StringBuilder重写都比较内容了        System. out. println(p1. equals(p2)); //true，因为重写equals（）中比较的是x和y        */    }}        /*        Point p = new Point(1,2);        //在println（）输出对象时默认调用Object中的toString（），相当于p.toString（）        System.out.println(p);//输出那个地址的数据，是没有意义的        Point类若不重与bject类的toString()方法，则使用0bject中定义的toString()，        方法的返回字符串格式为:类的全 称回地址        但通常这个返回结果对我们的开发没有帮助，因此需要重写toString()方法        //字符电连接时将默认调用对象的toString()        //相当于"这是个点: "+p. toString()        String str = "这是个点:"+p;        */