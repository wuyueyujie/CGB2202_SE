package ooday10;public class StringDemo {    public static void main(String[] args) {        String s1 = "123abc";//堆中创建一个123abc对象，常量池中存储这个对象        //编译器在编译时，若发现是两个字面量操作        //则直接运算好并将结果保存起来，如下代码相当于String s2 =”123abc“        String s2 = "123"+"abc";//复用常量池中的123abc对象        System.out.println(s1 == s2);//true        String s3 = "123";        //因为s3不是字面量，所以并不会直接运算结构        String s4 =s3+ "abc";//会在堆中创建新的123abc对象，而不会重用常量池中的对象        System.out.println("s1 == s4");//false        /*        使用字面量来创建字符串对象时，JVM会检查常量池红是否有该对象：        1）若没有，则会常见字符串对象并存入常量池中        2）若有，则直接将常量池中的对象返回（不会再创建新的字符串对象）        String s1 = "123abc"; //常量池还没有，因此创建该字符串对象，并存入常量池        String s2 = "123abc"; //常量池中已经有了，直接重用对象        String s3 = "123abc"; //常量池中已经有了，直接重用对象        //引用类型==。比较地址是否相同        System.out.println(s1 == s2);//true        System.out.println(s1 == s3);//true        System.out.println(s2 == s3);//true        s1 = s1+"!";//创建新的字符串对象并将地址赋值给s1        System.out.println(s1==s2);//false,因为s1为新对象的地址，与s2不同了        */    }}